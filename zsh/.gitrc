#!/bin/zsh

git_delete_local_stale_branches() {
  read "y?This will delete all local branches that don't exist remotely. Are you sure? [y/N] "
  case $y in
    [Yy]* ) git fetch --all -p; git branch -vv | grep ": gone]" | awk '{ print $1 }' | xargs -n 1 git branch -D; return;;
    * ) return;;
  esac
}

git_delete_branch() {
  current_branch=$(git branch --show-current)
  git checkout $@ --quiet 
  remote=$(git status -sb --porcelain | sed -n "s/^.*\.\.\.\(\S*\)\/.*$/\1/p")

  git checkout $current_branch --quiet
  git branch -d $@ -D

  if [[ ! -z "${remote// }" ]]
    then
      read "yn?Delete on $remote as well? [y/N] "
      case $yn in
        [Yy]* ) git push $remote :$@; return;;
        [Nn]* ) return;;
        * ) return;;
      esac
  fi
}

git_tree() {
  git log --graph --decorate --oneline --color | less -R
}

git_commit_and_push() {
  git add --all
  git commit -m "$@"
  git push
}

git_commit_all() {
  git add --all
  git commit -m $@
}

git_create_branch() {
  git branch $@
  git checkout $@

  remote=$(git remote | head -1)

  read "yn?Push to $remote as well? [y/N] "
  case $yn in
    [Yy]* ) git push -u $remote $@; return;;
    [Nn]* ) return;;
    * ) return;;
  esac
}

alias c='git commit -m'
alias st='git status'
alias ca='git_commit_all'
alias cap='git_commit_and_push'
alias p='git push'
alias pf='git push --force-with-lease'
alias pl='git pull --rebase'
alias cb='git_create_branch'
alias rb='git rebase'
alias b='git checkout'
alias db='git_delete_branch'
alias gt='git_tree'
alias m='git merge --ff-only'
alias cr='git_delete_local_stale_branches'
